ARGOCD_BASE_URL_KEY = 'ARGOCD_BASE_URL'
ARGOCD_USER_KEY = 'ARGOCD_USER'
ARGOCD_PASSWORD_KEY = 'ARGOCD_PASSWORD'
ARGOCD_TOKEN_KEY = 'ARGOCD_TOKEN'
DOCKER_IP_KEY = 'DOCKER_IP'
DOCKER_GID_KEY = 'DOCKER_GID'
GITLAB_HOST_KEY = 'GITLAB_HOST'
GITLAB_URL_KEY = 'GITLAB_URL'
GITLAB_API_BASE_URL_KEY = 'GITLAB_API_BASE_URL'
GITLAB_USER_KEY = 'GITLAB_USER'
GITLAB_PASSWORD_KEY = 'GITLAB_PASSWORD'
GITLAB_GROUP_KEY = 'GITLAB_GROUP'
GITLAB_API_KEY_KEY = 'GITLAB_API_KEY'
GITLAB_RUNNER_API_KEY_KEY = 'GITLAB_RUNNER_API_KEY'
GITLAB_CLIENT_ID_KEY = 'GITLAB_CLIENT_ID'
GITLAB_CLIENT_SECRET_KEY = 'GITLAB_CLIENT_SECRET'
GITLAB_SCRIPTS_DIR_KEY = 'GITLAB_SCRIPTS_DIR'
GITLAB_TEMPLATES_DIR_KEY = 'GITLAB_TEMPLATES_DIR'
POSTGRES_EXTENSIONS_KEY = 'POSTGRES_EXTENSIONS'
POSTGRES_DB_KEY = 'POSTGRES_DB'
POSTGRES_USER_KEY = 'POSTGRES_USER'
POSTGRES_PASSWORD_KEY = 'POSTGRES_PASSWORD'
POSTGRES_HOST_AUTH_METHOD_KEY = 'POSTGRES_HOST_AUTH_METHOD'
KUBERNETES_API_BASE_URL_KEY = 'KUBERNETES_API_BASE_URL'
KUBERNETES_CLUSTER_NAME_KEY = 'KUBERNETES_CLUSTER_NAME'
KUBERNETES_SKIP_TLS_KEY = 'KUBERNETES_SKIP_TLS'
KUBERNETES_SKIP_METRICS_KEY = 'KUBERNETES_SKIP_METRICS'
KUBERNETES_CLIENT_CERTIFICATE_DATA_KEY = 'KUBERNETES_CLIENT_CERTIFICATE_DATA'
KUBERNETES_CLIENT_KEY_DATA_KEY = 'KUBERNETES_CLIENT_KEY_DATA'

ARGOCD_BASE_URL_VALUE = 'https://argocd-local:7443'
ARGOCD_USER_VALUE = 'argo-admin-user'
ARGOCD_PASSWORD_VALUE = 'argo-admin-user-password'
# Execute argocd login to generate token
local(command='argocd login argocd-local:7443 --insecure --grpc-web --username admin --password $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d && echo)')
ARGOCD_TOKEN_VALUE = local(command='argocd account generate-token --insecure --grpc-web --account argo-admin-user')
DOCKER_IP_VALUE = local(command='docker network inspect bridge --format="{{(index .IPAM.Config 0).Gateway}}"')
DOCKER_GID_VALUE = local(command='getent group docker | cut -d: -f3')
GITLAB_HOST_VALUE = 'gitlab-local'
GITLAB_URL_VALUE = 'http://' + GITLAB_HOST_VALUE
GITLAB_API_BASE_URL_VALUE = GITLAB_URL_VALUE + '/api/v4'
GITLAB_USER_VALUE = 'root'
GITLAB_PASSWORD_VALUE = '-rob123-'
GITLAB_GROUP_VALUE = 'backstage-demo'
GITLAB_API_KEY_VALUE = 'glpat-zQ-yQ8VyW37oRSbEnWAx'
GITLAB_CLIENT_ID_VALUE = 'd3ea15baea5a9d72ed6a5fa2e42c71140a634bc374b0b0aaa01066a87e62ec62'
GITLAB_CLIENT_SECRET_VALUE = 'gloas-b1f8c16b11c2a90737b678ec970e0f0247aee65ae886e7dce89c65ae29a6bf67'
GITLAB_SCRIPTS_DIR_VALUE = '/scripts'
GITLAB_TEMPLATES_DIR_VALUE = GITLAB_SCRIPTS_DIR_VALUE + '/templates'
POSTGRES_EXTENSIONS_VALUE = 'pg_trgm,btree_gist'
POSTGRES_DB_VALUE = 'gitlabhq_production'
POSTGRES_USER_VALUE = 'gitlab'
POSTGRES_PASSWORD_VALUE = 'password'
POSTGRES_HOST_AUTH_METHOD_VALUE = 'trust'
KUBERNETES_API_BASE_URL_VALUE = 'https://kind-backstage-demo-cluster-local:6443'
KUBERNETES_CLUSTER_NAME_VALUE = 'kind-backstage-demo-cluster'
KUBERNETES_SKIP_TLS_VALUE = 'true'
KUBERNETES_SKIP_METRICS_VALUE = 'true'
KUBERNETES_CLIENT_KEY_DATA_VALUE = local(command='kubectl -n default get secret backstage-secret -o jsonpath="{.data.token}" | base64 --decode')
KUBERNETES_CLIENT_CERTIFICATE_DATA_VALUE = local(command='kubectl -n default get secret backstage-secret -o jsonpath="{.data.ca\\.crt}"')

BUILD_ARGS = {
    ARGOCD_BASE_URL_KEY: ARGOCD_BASE_URL_VALUE,
    ARGOCD_USER_KEY: ARGOCD_USER_VALUE,
    ARGOCD_PASSWORD_KEY: ARGOCD_PASSWORD_VALUE,
    ARGOCD_TOKEN_KEY: ARGOCD_TOKEN_VALUE,
    DOCKER_IP_KEY: DOCKER_IP_VALUE,
    DOCKER_GID_KEY: DOCKER_GID_VALUE,
    GITLAB_HOST_KEY: GITLAB_HOST_VALUE,
    GITLAB_URL_KEY: GITLAB_URL_VALUE,
    GITLAB_API_BASE_URL_KEY: GITLAB_API_BASE_URL_VALUE,
    GITLAB_USER_KEY: GITLAB_USER_VALUE,
    GITLAB_PASSWORD_KEY: GITLAB_PASSWORD_VALUE,
    GITLAB_GROUP_KEY: GITLAB_GROUP_VALUE,
    GITLAB_API_KEY_KEY: GITLAB_API_KEY_VALUE,
    GITLAB_CLIENT_ID_KEY: GITLAB_CLIENT_ID_VALUE,
    GITLAB_CLIENT_SECRET_KEY: GITLAB_CLIENT_SECRET_VALUE,
    GITLAB_SCRIPTS_DIR_KEY: GITLAB_SCRIPTS_DIR_VALUE,
    GITLAB_TEMPLATES_DIR_KEY: GITLAB_TEMPLATES_DIR_VALUE,
    POSTGRES_EXTENSIONS_KEY: POSTGRES_EXTENSIONS_VALUE,
    POSTGRES_DB_KEY: POSTGRES_DB_VALUE,
    POSTGRES_USER_KEY: POSTGRES_USER_VALUE,
    POSTGRES_PASSWORD_KEY: POSTGRES_PASSWORD_VALUE,
    POSTGRES_HOST_AUTH_METHOD_KEY: POSTGRES_HOST_AUTH_METHOD_VALUE,
    KUBERNETES_API_BASE_URL_KEY: KUBERNETES_API_BASE_URL_VALUE,
    KUBERNETES_CLUSTER_NAME_KEY: KUBERNETES_CLUSTER_NAME_VALUE,
    KUBERNETES_SKIP_TLS_KEY: KUBERNETES_SKIP_TLS_VALUE,
    KUBERNETES_SKIP_METRICS_KEY: KUBERNETES_SKIP_METRICS_VALUE,
    KUBERNETES_CLIENT_CERTIFICATE_DATA_KEY: KUBERNETES_CLIENT_CERTIFICATE_DATA_VALUE,
    KUBERNETES_CLIENT_KEY_DATA_KEY: KUBERNETES_CLIENT_KEY_DATA_VALUE,
    'NODE_OPTIONS': '--no-node-snapshot'
}

os.putenv(ARGOCD_BASE_URL_KEY, ARGOCD_BASE_URL_VALUE)
os.putenv(ARGOCD_USER_KEY, ARGOCD_USER_VALUE)
os.putenv(ARGOCD_PASSWORD_KEY, ARGOCD_PASSWORD_VALUE)
os.putenv(ARGOCD_TOKEN_KEY, ARGOCD_TOKEN_VALUE)
os.putenv(DOCKER_IP_KEY, DOCKER_IP_VALUE)
os.putenv(DOCKER_GID_KEY, DOCKER_GID_VALUE)
os.putenv(GITLAB_HOST_KEY, GITLAB_HOST_VALUE)
os.putenv(GITLAB_URL_KEY, GITLAB_URL_VALUE)
os.putenv(GITLAB_API_BASE_URL_KEY, GITLAB_API_BASE_URL_VALUE)
os.putenv(GITLAB_USER_KEY, GITLAB_USER_VALUE)
os.putenv(GITLAB_PASSWORD_KEY, GITLAB_PASSWORD_VALUE)
os.putenv(GITLAB_GROUP_KEY, GITLAB_GROUP_VALUE)
os.putenv(GITLAB_API_KEY_KEY, GITLAB_API_KEY_VALUE)
os.putenv(GITLAB_CLIENT_ID_KEY, GITLAB_CLIENT_ID_VALUE)
os.putenv(GITLAB_CLIENT_SECRET_KEY, GITLAB_CLIENT_SECRET_VALUE)
os.putenv(GITLAB_SCRIPTS_DIR_KEY, GITLAB_SCRIPTS_DIR_VALUE)
os.putenv(GITLAB_TEMPLATES_DIR_KEY, GITLAB_TEMPLATES_DIR_VALUE)
os.putenv(POSTGRES_EXTENSIONS_KEY, POSTGRES_EXTENSIONS_VALUE)
os.putenv(POSTGRES_DB_KEY, POSTGRES_DB_VALUE)
os.putenv(POSTGRES_USER_KEY, POSTGRES_USER_VALUE)
os.putenv(POSTGRES_PASSWORD_KEY, POSTGRES_PASSWORD_VALUE)
os.putenv(POSTGRES_HOST_AUTH_METHOD_KEY, POSTGRES_HOST_AUTH_METHOD_VALUE)
os.putenv(KUBERNETES_API_BASE_URL_KEY, KUBERNETES_API_BASE_URL_VALUE)
os.putenv(KUBERNETES_CLUSTER_NAME_KEY, KUBERNETES_CLUSTER_NAME_VALUE)
os.putenv(KUBERNETES_SKIP_TLS_KEY, KUBERNETES_SKIP_TLS_VALUE)
os.putenv(KUBERNETES_SKIP_METRICS_KEY, KUBERNETES_SKIP_METRICS_VALUE)
os.putenv(KUBERNETES_CLIENT_CERTIFICATE_DATA_KEY, KUBERNETES_CLIENT_CERTIFICATE_DATA_VALUE)
os.putenv(KUBERNETES_CLIENT_KEY_DATA_KEY, KUBERNETES_CLIENT_KEY_DATA_VALUE)
os.putenv('NODE_OPTIONS', '--no-node-snapshot')

docker_build(
    ref = 'gitlab-image',
    context = './gitlab',
    build_args = BUILD_ARGS,
)
docker_build(
    ref = 'gitlab-runner-image',
    context = './gitlab-runner',
    build_args = BUILD_ARGS,
)

docker_compose( configPaths = './docker-compose.yaml')

dc_resource(name = 'gitlab', labels = ['Services'], links = ['http://gitlab-local'])
dc_resource(name = 'gitlab-runner', labels = ['Services'])
dc_resource(name = 'postgres', labels = ['Services'])
dc_resource(name = 'redis', labels = ['Services'])

local_resource('startup', 'startup.sh', auto_init = False, labels = ['Kubernetes-ArgoCD'], links = ['https://argocd-local:7443'])
local_resource('install dependencies', 'yarn install', auto_init = False, labels = ['Backstage'])
local_resource(
    'backstage-app',
    serve_cmd = 'cd ../packages/app/ && backstage-cli package start',
    serve_env = BUILD_ARGS,
    allow_parallel = True,
    labels = ['Backstage'],
    links = ['http://backstage-local:3000']
)
local_resource(
    'backstage-backend',
    serve_cmd = 'cd ../packages/backend && backstage-cli package start',
    serve_env = BUILD_ARGS,
    allow_parallel = True,
    labels = ['Backstage'],
    links = ['http://backstage-local:7007']
)