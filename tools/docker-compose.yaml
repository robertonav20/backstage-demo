services:

  gitlab:
    image: gitlab/gitlab-ce:17.2.9-ce.0
    container_name: gitlab
    privileged: true
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://localhost:8090'
        gitlab_rails['gitlab_default_can_create_group'] = true
        gitlab_rails['gitlab_default_projects_features_visibility_level'] = 20
        gitlab_rails['gitlab_email_confirmation_enabled'] = false
        gitlab_rails['gitlab_email_confirmation'] = false
        gitlab_rails['gitlab_email_enabled'] = true
        gitlab_rails['gitlab_shell_ssh_port'] = 2424
        gitlab_rails['gitlab_signup_enabled'] = true
        gitlab_rails['gitlab_user_create_password_set_when_invited'] = true
        gitlab_rails['gitlab_username_changing_enabled'] = true
        gitlab_rails['sign_in_after_signup'] = true
        gitlab_rails['user_default_internal_regex'] = nil
        gitlab_rails['user_is_active'] = true
        gitlab_rails['user_show_secondary_emails'] = false
        letsencrypt['enable'] = false
      GITLAB_ROOT_PASSWORD: '-rob123-'
    ports:
      - "8090:8090"
      - "8443:443"
      - "2424:2424"
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab

  jenkins:
    build:
      context: ./jenkins
      dockerfile: Dockerfile
    container_name: jenkins
    privileged: true
    ports:
      - "8080:8080"
      - "50000:50000"
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    volumes:
      - jenkins_home:/var/jenkins_home
      - /run/user/1000/podman/podman.sock:/var/run/docker.sock  # For Docker in Jenkins
    depends_on:
      - gitlab

  k3s-cluster:
    image: rancher/k3s:v1.31.1-k3s1
    container_name: k3s-cluster
    command: ["server", "--container-runtime-endpoint", "unix:///run/podman/podman.sock"]  # Using the k3s server mode
    privileged: true
    tmpfs:
    - /run
    - /run/lock
    - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    restart: always
    environment:
    # - K3S_TOKEN=${K3S_PASSWORD_1} # Only required if we are running more than 1 node
    - K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml
    - K3S_KUBECONFIG_MODE=666
    volumes:
    - /sys/fs/cgroup:/sys/fs/cgroup:rw
    - /var/run/podman/podman.sock:/var/run/podman/podman.sock
    - ./k3s_data:/var/lib/rancher/k3s
    # This is just so that we get the kubeconfig file out
    - ./k3s_data/kubeconfig:/output
    - ./k3s_data/docker_images:/var/lib/rancher/k3s/agent/images
    expose:
    - "6443"  # Kubernetes API Server
    - "80"    # Ingress controller port 80
    - "443"   # Ingress controller port 443
    ports:
    - 6443:6443
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6443/healthz"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - k8s-network

networks:
  k8s-network:
    driver: bridge

volumes:
  gitlab_config:
  gitlab_logs:
  gitlab_data:
  jenkins_home:
  k3s_data: