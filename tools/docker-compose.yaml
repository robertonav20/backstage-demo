services:

  postgres:
    hostname: postgres-local
    container_name: postgres
    image: postgres:16.4
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_EXTENSIONS: ${POSTGRES_EXTENSIONS}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    privileged: true
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql

  redis:
    hostname: redis-local
    container_name: redis
    image: redis:6.2
    privileged: true
    ports:
      - "6379:6379"

  gitlab:
    hostname: gitlab-local
    container_name: gitlab
    image: gitlab-image
    build:
      context: ./gitlab
      args:
        GITLAB_URL: ${GITLAB_URL}
        GITLAB_USER: ${GITLAB_USER}
        GITLAB_PASSWORD: ${GITLAB_PASSWORD}
        GITLAB_GROUP: ${GITLAB_GROUP}
        GITLAB_API_KEY: ${GITLAB_API_KEY}
        GITLAB_CLIENT_ID: ${GITLAB_CLIENT_ID}
        GITLAB_CLIENT_SECRET: ${GITLAB_CLIENT_SECRET}
        GITLAB_SCRIPTS_DIR: ${GITLAB_SCRIPTS_DIR}
        GITLAB_TEMPLATES_DIR: ${GITLAB_TEMPLATES_DIR}
    depends_on:
      - postgres
      - redis
    environment:
      GITLAB_ROOT_PASSWORD: ${GITLAB_PASSWORD}
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab-local'

        letsencrypt['enable'] = false

        # Disable the bundled Omnibus provided PostgreSQL
        postgresql['enable'] = false

        # PostgreSQL connection details
        gitlab_rails['db_adapter'] = 'postgresql'
        gitlab_rails['db_encoding'] = 'unicode'
        gitlab_rails['db_host'] = 'postgres-local'
        gitlab_rails['db_user'] = 'gitlab'
        gitlab_rails['db_password'] = 'password'

        # Disable the bundled Redis
        redis['enable'] = true

        # Redis via TCP
        gitlab_rails['redis_host'] = 'redis-local'
        gitlab_rails['redis_port'] = 6379

        gitlab_rails['backup_keep_time'] = 345600
        gitlab_rails['auto_devops_enabled'] = false
        gitlab_rails['gitlab_default_can_create_group'] = true
        gitlab_rails['gitlab_default_projects_features_issues'] = false
        gitlab_rails['gitlab_default_projects_features_snippets'] = false
        gitlab_rails['gitlab_default_projects_features_visibility_level'] = 20
        gitlab_rails['gitlab_default_projects_features_wiki'] = false
        gitlab_rails['gitlab_email_confirmation_enabled'] = false
        gitlab_rails['gitlab_email_confirmation'] = false
        gitlab_rails['gitlab_email_enabled'] = true
        gitlab_rails['gitlab_shell_ssh_port'] = 2424
        gitlab_rails['gitlab_signup_enabled'] = true
        gitlab_rails['gitlab_user_create_password_set_when_invited'] = true
        gitlab_rails['gitlab_username_changing_enabled'] = true
        gitlab_rails['sign_in_after_signup'] = true
        gitlab_rails['user_default_internal_regex'] = nil
        gitlab_rails['user_is_active'] = true
        gitlab_rails['user_show_secondary_emails'] = false

        registry_external_url 'http://gitlab-local:5050'
        gitlab_rails['registry_enabled'] = true
        gitlab_rails['registry_host'] = "localhost"
        gitlab_rails['registry_port'] = "5050"
        gitlab_rails['registry_path'] = "/opt/gitlab/etc/registry/storage"
        nginx['listen_port'] = 80
        registry_nginx['listen_port'] = 5050
        registry_nginx['listen_https'] = false

        # Optimize
        prometheus_monitoring['enable'] = false
    entrypoint: ["/bin/bash", "-c", "/scripts/gitlab-startup.sh"]
    privileged: true
    ports:
      - "80:80"
      - "8443:443"
      - "5050:5050"
      - "2424:2424"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/-/readiness"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
      - gitlab_container_storage:/opt/gitlab/etc/registry/storage

  gitlab-runner:
    hostname: gitlab-runner
    container_name: gitlab-runner
    image: gitlab-runner-image
    build:
      context: ./gitlab-runner
      args:
        GITLAB_URL: ${GITLAB_URL}
        GITLAB_API_KEY: ${GITLAB_API_KEY}
        GITLAB_SCRIPTS_DIR: ${GITLAB_SCRIPTS_DIR}
    group_add:
        - 984
    privileged: true
    entrypoint: ["/bin/bash", "/scripts/gitlab-runner-startup.sh"]
    volumes:
      - gitlab_runner_config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    restart: always
    depends_on:
      gitlab:
        condition: service_healthy

  jenkins:
    hostname: jenkins.local
    container_name: jenkins
    image: jenkins-image
    build:
      context: ./jenkins
      dockerfile: Dockerfile
      args:
        GITLAB_USER: ${GITLAB_USER}
        GITLAB_PASSWORD: ${GITLAB_PASSWORD}
        GITLAB_API_KEY: ${GITLAB_API_KEY}
        JENKINS_ADMIN_PASSWORD: ${JENKINS_ADMIN_PASSWORD}
        JENKINS_ADMIN_USER: ${JENKINS_ADMIN_USER}
        JENKINS_FOLDER: ${JENKINS_FOLDER}
    group_add:
        - 984
    privileged: true
    ports:
      - "8080:8080"
      - "50000:50000"
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    depends_on:
      - gitlab

volumes:
  gitlab_config:
  gitlab_container_storage:
  gitlab_data:
  gitlab_logs:
  gitlab_runner_config:
  jenkins_home:
  postgres_data:
