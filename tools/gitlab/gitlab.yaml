apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: gitlab-logs
  name: gitlab-logs
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: gitlab-data
  name: gitlab-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: gitlab-container-storage
  name: gitlab-container-storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: gitlab-config
  name: gitlab-config
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: gitlab
  name: gitlab
spec:
  ports:
    - name: "8090"
      port: 8090
      targetPort: 8090
    - name: "8443"
      port: 8443
      targetPort: 443
    - name: "5050"
      port: 5050
      targetPort: 5050
    - name: "2424"
      port: 2424
      targetPort: 2424
  selector:
    io.kompose.service: gitlab
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: gitlab
  name: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: gitlab
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: gitlab
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      containers:
        - name: gitlab
          image: gitlab
          env:
            - name: GITLAB_OMNIBUS_CONFIG
              value: |
                external_url 'http://localhost:8090'

                letsencrypt['enable'] = false

                # Disable the bundled Omnibus provided PostgreSQL
                postgresql['enable'] = false

                # PostgreSQL connection details
                gitlab_rails['db_adapter'] = 'postgresql'
                gitlab_rails['db_encoding'] = 'unicode'
                gitlab_rails['db_host'] = 'postgres'
                gitlab_rails['db_user'] = 'gitlab'
                gitlab_rails['db_password'] = 'password'

                # Disable the bundled Redis
                # redis['enable'] = false

                # # Redis via TCP
                # gitlab_rails['redis_host'] = 'redis'
                # gitlab_rails['redis_port'] = 6379

                gitlab_rails['gitlab_default_can_create_group'] = true
                gitlab_rails['gitlab_default_projects_features_visibility_level'] = 20
                gitlab_rails['gitlab_email_confirmation_enabled'] = false
                gitlab_rails['gitlab_email_confirmation'] = false
                gitlab_rails['gitlab_email_enabled'] = true
                gitlab_rails['gitlab_shell_ssh_port'] = 2424
                gitlab_rails['gitlab_signup_enabled'] = true
                gitlab_rails['gitlab_user_create_password_set_when_invited'] = true
                gitlab_rails['gitlab_username_changing_enabled'] = true
                gitlab_rails['sign_in_after_signup'] = true
                gitlab_rails['user_default_internal_regex'] = nil
                gitlab_rails['user_is_active'] = true
                gitlab_rails['user_show_secondary_emails'] = false

                registry_external_url 'http://localhost:5050'
                gitlab_rails['registry_enabled'] = true
                gitlab_rails['registry_host'] = "localhost"
                gitlab_rails['registry_port'] = "5050"
                gitlab_rails['registry_path'] = "/opt/gitlab/etc/registry/storage"
                nginx['listen_port'] = 8090
                registry_nginx['listen_port'] = 5050
                registry_nginx['listen_https'] = false

                # registry['enable'] = true
                # registry['registry_http_addr'] = "localhost:5050"
                # registry['env_directory'] = "/opt/gitlab/etc/registry/env"
                # registry['log_directory'] = "/var/log/gitlab/registry"
                # registry_nginx['redirect_http_to_https'] = false

                # Optimize
                prometheus_monitoring['enable'] = false
                puma['worker_processes'] = 0
                sidekiq['concurrency'] = 10
                gitlab_rails['env'] = {
                  'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000'
                }
                gitaly['env'] = {
                  'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000',
                  'GITALY_COMMAND_SPAWN_MAX_PARALLEL' => '2'
                }

            - name: GITLAB_ROOT_PASSWORD
              value: -rob123-
          ports:
            - containerPort: 8090
              protocol: TCP
            - containerPort: 443
              protocol: TCP
            - containerPort: 5050
              protocol: TCP
            - containerPort: 2424
              protocol: TCP
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /etc/gitlab
              name: gitlab-config
            - mountPath: /var/log/gitlab
              name: gitlab-logs
            - mountPath: /var/opt/gitlab
              name: gitlab-data
            - mountPath: /opt/gitlab/etc/registry/storage
              name: gitlab-container-storage
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 2
              memory: 4Gi
      restartPolicy: Always
      volumes:
        - name: gitlab-config
          persistentVolumeClaim:
            claimName: gitlab-config
        - name: gitlab-logs
          persistentVolumeClaim:
            claimName: gitlab-logs
        - name: gitlab-data
          persistentVolumeClaim:
            claimName: gitlab-data
        - name: gitlab-container-storage
          persistentVolumeClaim:
            claimName: gitlab-container-storage
