# yaml-language-server: $schema=https://json.schemastore.org/yamllint.json

apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: static-site-pipeline-template
  title: Static Site Pipeline Template
  description: |
    This template will create a simple static site app repository under owner folder/group.
    You will obtain button links after job execution
  tags:
    - website
spec:
  type: website
  parameters:
    - title: Choose a location
      description: |
        This section will ask for details about the Owner and Repository name which will then be used
        to create a repository in that location using your GitHub credentials.
      properties:
        repoUrl:
          title: Enter an Owner and Repository Name
          description: |
            The Owner should be your GitHub username. The Repository name should be a name that is not one that exists already in your GitHub account.
          type: string
          ui:autofocus: true
          ui:field: RepoUrlPicker
          default: gitlab-local?owner=backstage-demo&repo=static-site-pipeline
          ui:options:
            allowedHosts:
              - gitlab-local
  steps:
    - id: fetch-skeleton
      name: Fetch Skeleton
      action: fetch:template
      input:
        url: ./skeleton
        values:
          component_id: ${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
          description: 'Static site component'
          owner: ${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}
          repo: ${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        allowedHosts: ['gitlab-local']
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: public
        defaultBranch: main
        description: Repository Created by Demo template
    - id: register
      name: Register Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog.yaml'
  output:
    links:
      - url: ${{ steps.publish.output.repoContentsUrl }}
        title: 'Gitlab Repository'
      - title: Open in catalog
        icon: 'kind:component'
        entityRef: ${{ steps.register.output.entityRef }}
